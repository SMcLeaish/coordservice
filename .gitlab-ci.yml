workflow:
   rules:
      - if: $CI_MERGE_REQUEST_ID
        when: always
      - if: '$CI_COMMIT_BRANCH == "main"'
        when: always
      - when: never

stages:
   - prepare
   - test
   - build
   - cleanup

include:
   - template: Jobs/SAST.gitlab-ci.yml

variables:
   CI_REGISTRY: registry.gitlab.com
   CI_REGISTRY_IMAGE: registry.gitlab.com/smcleaish/sm-services/coordservice
   IMAGE_TAG: $CI_COMMIT_REF_NAME
   DOCKER_DRIVER: overlay2

.default_before_script:
   image: python:3.11-slim
   before_script:
      - pip install poetry
      - poetry config virtualenvs.in-project true
      - poetry config cache-dir .cache/pypoetry

qa:
   stage: test
   extends: .default_before_script
   script:
      - poetry install
      - poetry run isort . --check
      - poetry run black . --check
      - poetry run mypy coordextract
      - poetry run pylint coordextract tests
   allow_failure: true

test:
   stage: test
   extends: .default_before_script
   coverage: /TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
   script:
      - poetry install
      - poetry run pytest --cov=coordextract --cov-report=xml:coverage.xml --cov-report=term --junitxml=pytest.xml
   allow_failure: true
   artifacts:
      reports:
         junit: pytest.xml
         coverage_report:
            coverage_format: cobertura
            path: coverage.xml

sast:
   stage: test

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/coordservice:$IMAGE_TAG .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/coordservice:$IMAGE_TAG
  only:
    - main

cleanup:
  stage: cleanup
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker system prune -af
  when: always

